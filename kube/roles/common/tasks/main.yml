---
- name: Set Kubernetes and CRI-O versions
  set_fact:
    kubernetes_version: "v1.31"
    crio_version: "v1.31"
    k8s_package_version: "1.31.1-1.1"

- name: Add Kubernetes YUM repository
  copy:
    dest: /etc/yum.repos.d/kubernetes.repo
    content: |
      [kubernetes]
      name=Kubernetes
      baseurl=https://pkgs.k8s.io/core:/stable:/{{ kubernetes_version }}/rpm/
      enabled=1
      gpgcheck=1
      gpgkey=https://pkgs.k8s.io/core:/stable:/{{ kubernetes_version }}/rpm/repodata/repomd.xml.key

- name: Add CRI-O YUM repository
  copy:
    dest: /etc/yum.repos.d/cri-o.repo
    content: |
      [cri-o]
      name=CRI-O
      baseurl=https://pkgs.k8s.io/addons:/cri-o:/stable:/{{ crio_version }}/rpm/
      enabled=1
      gpgcheck=1
      gpgkey=https://pkgs.k8s.io/addons:/cri-o:/stable:/{{ crio_version }}/rpm/repodata/repomd.xml.key

- name: Search for required packages (debug)
  command: dnf search kubectl kubeadm kubelet cri-o
  register: package_search
  changed_when: false
  ignore_errors: true

- name: Install CRI-O with specific version
  dnf:
    name:
      - cri-o
    state: present

- name: Install Kubernetes packages with specific versions
  dnf:
    name:
      - "kubelet-{{ k8s_package_version }}"
      - "kubeadm-{{ k8s_package_version }}"
      - "kubectl-{{ k8s_package_version }}"
    state: present
    allow_downgrade: yes

- name: Enable and start CRI-O and Kubelet services
  systemd:
    name: "{{ item }}"
    enabled: true
    state: started
  loop:
    - crio.service
    - kubelet

- name: Disable and stop Firewalld
  systemd:
    name: firewalld
    enabled: false
    state: stopped

- name: Set SELinux to permissive
  selinux:
    state: permissive
    policy: targeted 
    configfile: /etc/selinux/config

- name: Disable Swap
  shell: |
    swapoff -a
    sed -i 's/\/dev\/mapper\/rl-swap/\#\/dev\/mapper\/rl-swap/g' /etc/fstab
    systemctl daemon-reload
  register: swapoff_output

- name: Configure sysctl for Kubernetes
  copy:
    dest: /etc/sysctl.d/k8s-mod.conf
    content: |
      net.bridge.bridge-nf-call-iptables=1
      net.ipv4.ip_forward=1
      net.bridge.bridge-nf-call-ip6tables=1

- name: Reload sysctl settings
  command: sysctl --system -q

- name: Load required kernel modules
  copy:
    dest: /etc/modules-load.d/k8s-modules.conf
    content: |
      br_netfilter
      overlay

- name: Load kernel modules immediately
  shell: |
    modprobe br_netfilter
    modprobe overlay

- name: Append entries to /etc/hosts file
  lineinfile:
    path: /etc/hosts
    line: "{{ item }}"
    create: yes
  with_items:
    - "{{ hostvars['controller']['ansible_host'] }} node1.example.com node1"
    - "{{ hostvars['compute1']['ansible_host'] }} node2.example.com node2"
    - "{{ hostvars['compute2']['ansible_host'] }} node3.example.com node3"
    - "{{ hostvars['infra']['ansible_host'] }} storage.example.com storage"